#lang racket
(display "Вариант 1\n")
(display "Вычисление площади кольца.\n")
(display "Введите исходные данные:\n")
(display "Радиус кольца(см) = ")
(define ring(read))
(display "Радиус отверстия(см) = ")
(define hole(read))
(define (s x y)
  (- (* 3.14 (* x x)) (* 3.14 (* y y))))
(if (> hole ring)
    (display "Ошибка! Радиус отверстия не может быть больше радиуса кольца.\n\n")
    (display (format "Площадь кольца: ~a см. кв\n\n" (s ring hole))))

(display "Вариант 4\n")
(display "Вычисление сопротивления электрической цепи.\n")
(display "Введите исходные данные:\n")
(display "Величина первого сопротивления(Ом) = ")
(define R1(read))
(display "Величина второго сопротивления(Ом) = ")
(define R2(read))
(display "Тип соединения (1 - последовательное, 2 - паралельное) = ")
(define type(read))
(define (parallel x y)
  (/ 1 (+ (/ 1 x) (/ 1 y))))
(define (consistent x y)
  (+ x y))
(define (R x y z)
  (cond ((= z 1) (consistent x y))
        ((= z 2) (parallel x y))))
(display (format "Сопротивление цепи: ~a Ом\n\n" (R R1 R2 type)))

(display "Вариант 5\n")
(display "Решение квадратного уравнения.\n")
(display "Введите в одной строке значения коэффициентов:\n")
(define a(read))
(define b(read))
(define c(read))
(define (discriminant a b c)
      (- (sqr b) (* 4 a c)))
(define (one a b)
  (/ (- b) (* 2 a)))
(define (two a b dis)
  (/ (+ (- b) (sqrt dis)) (* 2 a)))
(define (two-minus a b dis)
  (/ (- (- b) (sqrt dis)) (* 2 a)))
(define dis (discriminant a b c))

(if (= a 0)
    (display "Ошибка! Уравнение не является квадратным.\n\n")
    (cond
      ((< dis 0)
       (display "Так как дискриминант меньше нуля, то уравнение не имеет действительных корней.\n\n"))
      ((= dis 0)
       (display (format "x = ~a\n\n" (one a b))))
      ((> dis 0)
       (display (format "x1 = ~a\nx2 = ~a\n\n" (two a b dis) (two-minus a b dis)))
        )))
